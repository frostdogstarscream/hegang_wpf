<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Hegang.APP">
    <!-- ComBox -->
    <!-- 1.ComboBox下拉按钮样式 -->
    <Style TargetType="ToggleButton" x:Key="ComboxStyleBtn">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <!--下拉按钮内边框-->
                    <!--<TextBlock VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Path Name="PathFill" Fill="#13227a"  Width="6" Height="4" StrokeThickness="0" Data="M5,0 L10,10 L0,10 z" RenderTransformOrigin="0.5,0.5" Stretch="Fill">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="180"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                        </TextBlock>-->

                    <Path Name="PathFill" Fill="#13227a"  Width="10" Height="6" StrokeThickness="0" Data="M5,0 L10,10 L0,10 z" RenderTransformOrigin="0.5,0.5" Stretch="Fill">
                        <Path.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform Angle="180"/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Path.RenderTransform>
                    </Path>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PathFill" Property="Fill" Value="#b35c44"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- 2.ComboBox模板 -->
    <ControlTemplate x:Key="ComboBox_template" TargetType="{x:Type ComboBox}">
        <Border  BorderBrush="Black" BorderThickness="1" Background="White" x:Name="comboBox_border">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="25"/>
                </Grid.ColumnDefinitions>

                <!--文字区域背景和边线样式-->

                <TextBlock VerticalAlignment="Center" Padding="3,0,0,0" Foreground="Black" Background="Transparent" Text="{TemplateBinding Text}"></TextBlock>

                <!--右侧下拉button设置-->
                <!--<ToggleButton  Style="{StaticResource ComboxStyleBtn}" BorderThickness="0" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"></ToggleButton>-->

                <ToggleButton Grid.Column="1" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" Background="Transparent" BorderThickness="0">
                    <Image Source="./images/down.png" Width="10"></Image>
                </ToggleButton>

                <!--弹出popup整体设置-->
                <Popup IsOpen="{TemplateBinding IsDropDownOpen}" PlacementTarget="{Binding ElementName=comboBox_border}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide" >
                    <!--弹出popup边框-->
                    <Border CornerRadius="1" BorderBrush="Black" BorderThickness="0.5,0,0.5,0.5" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                        <!--下拉幕布边界背景设置 MaxHeight="{TemplateBinding MaxDropDownHeight}"-->
                        <ScrollViewer Margin="0,0,0,0"   SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" BorderBrush="Black" BorderThickness="2" >
                            <!-- StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True -->
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Background="White" />
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
    </ControlTemplate>

    <!-- GridViewColumnHeader样式 -->
    <Style x:Key="HeadStyle" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="5,0,0,0" />
    </Style>
    <!-- ListViewItem样式 -->
    <Style x:Key="ListViewItemStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="BorderBrush" Value="Gray"></Setter>
        <Setter Property="BorderThickness" Value="0,0,0,0.3"></Setter>
    </Style>
    
    <!-- 登录、注册按钮样式 -->
    <ControlTemplate x:Key="btn_template" TargetType="Button">
        <Border x:Name="btn_border" Background="#1296db" BorderBrush="Black" BorderThickness="0.3" CornerRadius="5">
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">
            </ContentPresenter>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="btn_border" Property="Background" Value="#1685a9"></Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>
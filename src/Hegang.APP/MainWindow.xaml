<!--
    参考：
        https://blog.csdn.net/thy38/article/details/5888918
        https://blog.csdn.net/mpegfour/article/details/78862165
        https://www.cnblogs.com/king10086/p/11905494.html
-->
<Window x:Class="Hegang.APP.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Hegang.APP"
        mc:Ignorable="d"
        Title="鸟山矿PLC监测服务程序" Height="450" Width="650" Icon="./images/icon.png" WindowStyle="None" 
        MouseLeftButtonDown="Window_MouseLeftButtonDown" ResizeMode="CanResize"  WindowStartupLocation="CenterScreen">
    
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="0"  CornerRadius="0" ResizeBorderThickness="0"/>
    </WindowChrome.WindowChrome>
    
    <Window.Resources>
        <!-- TreeView样式 -->
        <Style TargetType="TreeViewItem">
            <Style.Resources>
                <!-- 去掉treeview选中节点默认的深蓝色 -->
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="White"/>
            </Style.Resources>
        </Style>
        
        <!-- ComboBox下拉按钮样式 -->
        <Style TargetType="ToggleButton" x:Key="ComboxStyleBtn">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <!--下拉按钮内部背景色-->
                        <Border x:Name="Back" Background="White" BorderThickness="1">
                            <!--下拉按钮内边框-->
                            <Path Name="PathFill" Fill="Black"  Width="10" Height="6" Data="M5,0 L10,10 L0,10 z" RenderTransformOrigin="0.5,0.5" Stretch="Fill">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="180"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- ComboBox模板 -->
        <ControlTemplate x:Key="ComboBox_template" TargetType="{x:Type ComboBox}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="7*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                
                <!--文字区域背景和边线样式-->
                <TextBox Background="White" VerticalAlignment="Center"  Grid.Column="0" Foreground="Black" BorderBrush="Black" BorderThickness="0" IsReadOnly="{TemplateBinding IsReadOnly}" Text="{TemplateBinding Text}"></TextBox>
                <Border  Grid.Column="0" BorderThickness="0.5,0.5,0,0.5" BorderBrush="Black"/>

                <!--右侧下拉button设置-->
                <Border Grid.Column="1" BorderThickness="0,0.5,0.5,0.5" BorderBrush="Black">
                    <ToggleButton BorderThickness="3" BorderBrush="Black" Style="{StaticResource ComboxStyleBtn}" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"></ToggleButton>
                </Border>
                
                <!--弹出popup整体设置-->
                <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide" >
                    <!--弹出popup边框-->
                    <Border CornerRadius="1" BorderBrush="Black" BorderThickness="0.5,0,0.5,0.5" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                        <!--下拉幕布边界背景设置 MaxHeight="{TemplateBinding MaxDropDownHeight}"-->
                        <ScrollViewer Margin="0,0,0,0"   SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" BorderBrush="Black" BorderThickness="2" >
                            <!-- StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True -->
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Background="White" />
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </ControlTemplate>

        <Style x:Key="HeadStyle" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="OverridesDefaultStyle" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                        <Grid Name="g" Background="White">
                            <Border Name="bd" Padding="{TemplateBinding Padding}" BorderBrush="White" BorderThickness="1">
                                <ContentPresenter Margin="0,3,0,3" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="bd" Property="BorderBrush" Value="#8CC7B5"/>
                                <Setter TargetName="bd" Property="BorderThickness" Value="1"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    
    <Border BorderBrush="black" BorderThickness="0.3">
        <DockPanel>
            <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" HorizontalAlignment="Right" >
                <Button Name="minimize_btn" Background="White" BorderBrush="{x:Null}" Width="40" Height="30"  Click="minimize_btn_Click">
                    <Image Source="./images/minimize.png" Width="20" Height="20"></Image>
                </Button>
                <Button Name="close_btn" Background="White" BorderBrush="{x:Null}" Width="40" Height="30" Click="close_btn_Click">
                    <Image Source="./images/close.png" Width="20" Height="20"></Image>
                </Button>
            </StackPanel>

            <Grid DockPanel.Dock="Top" Margin="10,5,10,0" Height="25">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="5*"></ColumnDefinition>
                    <ColumnDefinition Width="8*"></ColumnDefinition>
                    <ColumnDefinition Width="2.5*"></ColumnDefinition>
                    <ColumnDefinition Width="2*"></ColumnDefinition>
                    <ColumnDefinition Width="2.5*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Button Name="btn_connect" Grid.Column="0" Background="White" Content="加载并连接OPC"  Click="btn_connect_Click" />
                <ComboBox Name="cmb_server_list" Grid.Column="1"  SelectedIndex="0" Margin="5,0,0,0" Template="{StaticResource ComboBox_template}"/>
                <Button Grid.Column="2" Background="White" Content="读取数据" Name="btn_read" Click="btn_read_Click" Margin="5,0,0,0"/>
                <Button Grid.Column="3" Background="White" Content="停止" Margin="5,0,0,0"/>
                <Button Grid.Column="4" Background="White" Content="数据库配置" Margin="5,0,0,0" Name="btn_DBConfig" Click="btn_DBConfig_Click"></Button>
            </Grid>
            <Grid Margin="10,10,10,10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>

                    <ColumnDefinition Width="3*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <TreeView Grid.Column="0" Name="chk_treeview" IsTextSearchCaseSensitive="True">
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="TreeViewItem">
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"></Setter>
                        </Style>
                    </TreeView.ItemContainerStyle>
                    <TreeView.ItemTemplate>
                        <HierarchicalDataTemplate ItemsSource="{Binding Path =ChildList}">
                            <CheckBox Name="checkbox" IsChecked="{Binding Path = IsChecked, Mode=TwoWay }">
                                <ContentPresenter Content="{Binding Path = NodeName}"/>
                            </CheckBox>
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>
                </TreeView>

                <Grid Grid.Column="2" Margin="5,0,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="1.5*"/>
                            <ColumnDefinition Width=".3*"/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0" x:Name="col1"/>
                        <Grid Grid.Column="1" x:Name="col2"/>
                        <Grid Grid.Column="2" x:Name="col3"/>
                        <Grid Grid.Column="3" x:Name="col4"/>
                    </Grid>
                    <ListView Name="listView" Grid.Row="1">
                        <ListView.View>
                            <GridView ColumnHeaderContainerStyle="{StaticResource HeadStyle}">
                                <GridView.Columns>
                                    <GridViewColumn  Header="测点名称" DisplayMemberBinding="{Binding Path = Item_name}" Width="{Binding ElementName=col1,Path=ActualWidth}"/>
                                    <GridViewColumn  Header="测点值" DisplayMemberBinding="{Binding Path = Item_value}" Width="{Binding ElementName=col2,Path=ActualWidth}"/>
                                    <GridViewColumn  Header="测点句柄" DisplayMemberBinding="{Binding Path = Item_handle}" Width="{Binding ElementName=col3,Path=ActualWidth}"/>
                                    <GridViewColumn  Header="时间戳" DisplayMemberBinding="{Binding Path = Item_timestamp}" Width="{Binding ElementName=col4,Path=ActualWidth}"/>
                                </GridView.Columns>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </Grid>

            </Grid>
        </DockPanel>
    </Border>    
        
    
    
</Window>
